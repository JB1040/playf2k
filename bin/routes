

#
# ARTICLES
#

# Get article by author.
GET     /api/articles/byAuthor/:id     controllers.ArticlesController.byAuthor(id: Long)


GET     /api/articles/featured             controllers.ArticlesController.getFeatured()

# Get article list, optional offset,amount
GET     /api/articles/list             controllers.ArticlesController.getArticles(offset: Int ?= 0,amount: Int ?= 20)


GET    /api/articles/edit              controllers.ArticlesController.editInsertArticle(id: Long ?= -1)

POST    /api/articles/edit              controllers.ArticlesController.doEditInsertArticle()


# Get direct article
GET     /api/articles/upvote/:id       controllers.ArticlesController.upvoteArticle(id: Long)

# Get direct article
GET     /api/articles/:id              controllers.ArticlesController.getArticle(id: Long)


# Get list of users
GET     /api/users/login              controllers.UserController.login(url: String ?= null)


# Get list of users
POST     /api/users/login              controllers.UserController.doLogin()

# Get list of users
GET     /api/users/list              controllers.UserController.getUsers(offset: Int ?= 0,amount: Int ?= 50,online: String ?= null)


# Get direct user
GET     /api/users/:id              controllers.UserController.getUser(id: Long)


# Get article by author.
GET     /api/decks/byAuthor/:id     controllers.DeckArticlesController.byAuthor(id: Long)

# Get article list, optional offset,amount
GET     /api/decks/list             controllers.DeckArticlesController.getArticles(offset: Int ?= 0,amount: Int ?= 20, tier: Int ?= 0,mode: String ?= null, isStandard: String ?= null)


GET    /api/decks/edit              controllers.DeckArticlesController.editInsertArticle(id: Long ?= -1)

POST    /api/decks/edit              controllers.DeckArticlesController.doEditInsertArticle()


# Get direct article
GET     /api/decks/upvote/:id       controllers.DeckArticlesController.upvoteArticle(id: Long)

# Get direct article
GET     /api/decks/:id              controllers.DeckArticlesController.getArticle(id: Long)


# Get direct article
GET     /api/cards/all             controllers.DeckArticlesController.allCards()


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                   controllers.Assets.versioned(path="/public", file: Asset)
